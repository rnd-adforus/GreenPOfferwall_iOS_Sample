// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 6 -enforce-exclusivity=checked -Onone -module-name GreenpOfferwall
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AdSupport
import AppTrackingTransparency
import Combine
import CoreGraphics
import CoreText
import CryptoKit
import DeveloperToolsSupport
import Flutter
import Foundation
@_exported import GreenpOfferwall
import MessageUI
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class GreenpFlutter {
  public var flutterResult: Flutter.FlutterResult?
  public init(flutterEngine: Flutter.FlutterEngine)
  public func setController(_ controller: UIKit.UIViewController)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency open class NavigationController : UIKit.UINavigationController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewDidLoad()
  @objc deinit
  @available(iOS 5.0, *)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(navigationBarClass: Swift.AnyClass?, toolbarClass: Swift.AnyClass?)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(rootViewController: UIKit.UIViewController)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
}
@objc public protocol GreenPDelegate {
  @objc optional func greenPSettingsDidEnd(with message: Swift.String)
  @objc optional func greenPSettingsDidEnd(with message: Swift.String, result: Swift.Bool)
}
open class GreenPSettings : @unchecked Swift.Sendable {
  public init(delegate: any GreenpOfferwall.GreenPDelegate)
  public func set(appCode: Swift.String, userID: Swift.String)
  public func setRandomUser(isRandom: Swift.Bool)
  public func setAppUniqKey(key: Swift.String)
  public func setAuthMessage(msg: Swift.String)
  public func show(on viewController: UIKit.UIViewController)
  @objc deinit
}
extension UIKit.UIApplication {
  @_Concurrency.MainActor @preconcurrency public class func getMostTopViewController(base: UIKit.UIViewController? = nil) -> UIKit.UIViewController?
}
@objc(DynamicUAdObject) public class DynamicUAdObject : ObjectiveC.NSObject {
  public init(className: Swift.String)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(DynamicHandler) public class DynamicHandler : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc public func onEvent(name: Swift.String)
  @objc public func setBannerView(view: UIKit.UIView)
  @objc public func setNativeAdView(view: UIKit.UIView)
  @objc public func setNativeAdImpView(view: UIKit.UIView)
  @objc public func setFailedMessage(msg: Swift.String)
  @objc deinit
}
